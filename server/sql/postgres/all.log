********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INT NOT NULL ,
  order_number 		INT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INT NOT NULL,
  order_number		INT DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INT NOT NULL ,
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INT NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INT NOT NULL ,
  image_id varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INT NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INT NOT NULL ,
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id INT NOT NULL ,
  field_name varchar(255) DEFAULT NULL,
  integration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id,field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id INT NOT NULL ,
  entity_name varchar(255) DEFAULT NULL,
  last_update_time INT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id INT NOT NULL ,
  name varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INT NOT NULL ,
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id varchar(255) NOT NULL,
  status varchar(64) DEFAULT NULL,
  last_update_time INT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		smallint NOT NULL,
  order_num		int NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		smallint NOT NULL,
  order_num		int NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INT NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO idamobile;
**************************

********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

********* QUERY **********
drop table qrtz_simple_triggers;
**************************

********* QUERY **********
drop table qrtz_cron_triggers;
**************************

********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

********* QUERY **********
drop table qrtz_triggers;
**************************

********* QUERY **********
drop table qrtz_job_details;
**************************

********* QUERY **********
drop table qrtz_calendars;
**************************

********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INT NOT NULL ,
  order_number 		INT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INT NOT NULL,
  order_number		INT DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INT NOT NULL ,
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INT NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INT NOT NULL ,
  image_id varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INT NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INT NOT NULL ,
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id INT NOT NULL ,
  field_name varchar(255) DEFAULT NULL,
  integration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id,field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id INT NOT NULL ,
  entity_name varchar(255) DEFAULT NULL,
  last_update_time INT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id INT NOT NULL ,
  name varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INT NOT NULL ,
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id varchar(255) NOT NULL,
  status varchar(64) DEFAULT NULL,
  last_update_time INT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		smallint NOT NULL,
  order_num		int NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		smallint NOT NULL,
  order_num		int NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INT NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO idamobile;
**************************

********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INTEGER NOT NULL ,
  order_number 		INTEGER DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INTEGER NOT NULL,
  order_number		INTEGER DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INTEGER NOT NULL ,
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INTEGER NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INTEGER NOT NULL ,
  image_id varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INTEGER NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INTEGER NOT NULL ,
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_INTEGERegration_properties (
  id INTEGER NOT NULL ,
  field_name varchar(255) DEFAULT NULL,
  INTEGERegration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (INTEGERegration_id,field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				INTEGEREGER NOT NULL ,
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	INTEGEREGER DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_properties (
  id INTEGER NOT NULL ,
  name varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INTEGER NOT NULL ,
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id varchar(255) NOT NULL,
  status varchar(64) DEFAULT NULL,
  last_update_time INTEGER DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO idamobile;
**************************

********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INTEGER NOT NULL ,
  order_number 		INTEGER DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INTEGER NOT NULL,
  order_number		INTEGER DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INTEGER NOT NULL ,
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INTEGER NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INTEGER NOT NULL ,
  image_id varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INTEGER NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INTEGER NOT NULL ,
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_INTEGERegration_properties (
  id INTEGER NOT NULL ,
  field_name varchar(255) DEFAULT NULL,
  INTEGERegration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (INTEGERegration_id,field_name)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_last_updates (
  id				INTEGER NOT NULL ,
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id INTEGER NOT NULL ,
  name varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INTEGER NOT NULL ,
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id varchar(255) NOT NULL,
  status varchar(64) DEFAULT NULL,
  last_update_time INTEGER DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO idamobile;
**************************

********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INTEGER NOT NULL ,
  order_number 		INTEGER DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INTEGER NOT NULL,
  order_number		INTEGER DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INTEGER NOT NULL ,
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INTEGER NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INTEGER NOT NULL ,
  image_id varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INTEGER NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INTEGER NOT NULL ,
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_INTEGERegration_properties (
  id INTEGER NOT NULL ,
  field_name varchar(255) DEFAULT NULL,
  INTEGERegration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (INTEGERegration_id,field_name)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_last_updates (
  id				INTEGER NOT NULL ,
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id INTEGER NOT NULL ,
  name varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INTEGER NOT NULL ,
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id varchar(255) NOT NULL,
  status varchar(64) DEFAULT NULL,
  last_update_time INTEGER DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO idamobile;
**************************

********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INTEGER NOT NULL ,
  order_number 		INTEGER DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INTEGER NOT NULL,
  order_number		INTEGER DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INTEGER NOT NULL ,
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INTEGER NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INTEGER NOT NULL ,
  image_id varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INTEGER NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INTEGER NOT NULL ,
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id INTEGER NOT NULL ,
  field_name varchar(255) DEFAULT NULL,
  INTEGERegration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (INTEGERegration_id,field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				INTEGER NOT NULL ,
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id INTEGER NOT NULL ,
  name varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INTEGER NOT NULL ,
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id varchar(255) NOT NULL,
  status varchar(64) DEFAULT NULL,
  last_update_time INTEGER DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO idamobile;
**************************

********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INTEGER NOT NULL ,
  order_number 		INTEGER DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INTEGER NOT NULL,
  order_number		INTEGER DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INTEGER NOT NULL ,
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INTEGER NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INTEGER NOT NULL ,
  image_id varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INTEGER NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INTEGER NOT NULL ,
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id			INTEGER NOT NULL ,
  field_name	varchar(255) DEFAULT NULL,
  INTEGERegration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id,field_name)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_last_updates (
  id				INTEGER NOT NULL ,
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id INTEGER NOT NULL ,
  name varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INTEGER NOT NULL ,
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id varchar(255) NOT NULL,
  status varchar(64) DEFAULT NULL,
  last_update_time INTEGER DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO idamobile;
**************************

********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INTEGER NOT NULL ,
  order_number 		INTEGER DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INTEGER NOT NULL,
  order_number		INTEGER DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INTEGER NOT NULL ,
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INTEGER NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INTEGER NOT NULL ,
  image_id varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INTEGER NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INTEGER NOT NULL ,
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id			INTEGER NOT NULL ,
  field_name	varchar(255) DEFAULT NULL,
  INTEGERegration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id,field_name)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_last_updates (
  id				INTEGER NOT NULL ,
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id INTEGER NOT NULL ,
  name varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INTEGER NOT NULL ,
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id varchar(255) NOT NULL,
  status varchar(64) DEFAULT NULL,
  last_update_time INTEGER DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO idamobile;
**************************

********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INTEGER NOT NULL ,
  order_number 		INTEGER DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INTEGER NOT NULL,
  order_number		INTEGER DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INTEGER NOT NULL ,
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INTEGER NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INTEGER NOT NULL ,
  image_id varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INTEGER NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INTEGER NOT NULL ,
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id			INTEGER NOT NULL ,
  field_name	varchar(255) DEFAULT NULL,
  integration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				INTEGER NOT NULL ,
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id INTEGER NOT NULL ,
  name varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INTEGER NOT NULL ,
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id varchar(255) NOT NULL,
  status varchar(64) DEFAULT NULL,
  last_update_time INTEGER DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INTEGER NOT NULL ,
  order_number 		INTEGER DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INTEGER NOT NULL,
  order_number		INTEGER DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INTEGER NOT NULL ,
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INTEGER NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INTEGER NOT NULL ,
  image_id varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INTEGER NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INTEGER NOT NULL ,
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id			INTEGER NOT NULL ,
  field_name	varchar(255) DEFAULT NULL,
  integration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				INTEGER NOT NULL ,
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id INTEGER NOT NULL ,
  name varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INTEGER NOT NULL ,
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id varchar(255) NOT NULL,
  status varchar(64) DEFAULT NULL,
  last_update_time INTEGER DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INTEGER NOT NULL ,
  order_number 		INTEGER DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INTEGER NOT NULL,
  order_number		INTEGER DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INTEGER NOT NULL ,
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INTEGER NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INTEGER NOT NULL ,
  image_id varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INTEGER NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INTEGER NOT NULL ,
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id			INTEGER NOT NULL ,
  field_name	varchar(255) DEFAULT NULL,
  integration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				INTEGER NOT NULL ,
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id INTEGER NOT NULL ,
  name varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INTEGER NOT NULL ,
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INTEGER NOT NULL ,
  order_number 		INTEGER DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INTEGER NOT NULL,
  order_number		INTEGER DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INTEGER NOT NULL ,
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INTEGER NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INTEGER NOT NULL ,
  image_id varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INTEGER NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INTEGER NOT NULL ,
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id			INTEGER NOT NULL ,
  field_name	varchar(255) DEFAULT NULL,
  integration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				INTEGER NOT NULL ,
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id		INTEGER NOT NULL ,
  name		varchar(255) DEFAULT NULL,
  value 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INTEGER NOT NULL ,
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE ida_banners (
  id 				INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		INTEGER DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number		INTEGER DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INTEGER NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INTEGER NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_integration_properties (
  id			INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name	varchar(255) DEFAULT NULL,
  integration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_last_updates (
  id				INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_properties (
  id		INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name		varchar(255) DEFAULT NULL,
  value 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_users (
  id INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		INTEGER DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number		INTEGER DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  region varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id INTEGER NOT NULL ,
  category varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en varchar(255) DEFAULT NULL,
  visible_name_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id			INTEGER NOT NULL ,
  product_kind	SMALLINT DEFAULT NULL,
  status_key varchar(255) DEFAULT NULL,
  status_value_en varchar(255) DEFAULT NULL,
  status_value_ru varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image varchar(255) DEFAULT NULL,
  image_id varchar(255) DEFAULT NULL,
  platform varchar(255) DEFAULT NULL,
  resolution varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id			INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name	varchar(255) DEFAULT NULL,
  integration_id varchar(255) DEFAULT NULL,
  value varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id		INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name		varchar(255) DEFAULT NULL,
  value 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id INTEGER NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password varchar(255) DEFAULT NULL,
  username varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  zip_code		varchar(255) DEFAULT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name		varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  phone		varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id		SMALLINT NOT NULL,
  order_num		INTEGER NOT NULL,
  city		varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address		varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude		decimal(10, 7) DEFAULT NULL,
  longitude		decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number		BIGINT DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number		BIGINT DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number		BIGINT DEFAULT NULL,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  value				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
/*
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		TEXT,
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
*/
CREATE TABLE ida_contacts
(
  id bigint NOT NULL,
  order_number bigint,
  contact_id character varying(255),
  large_value text,
  contact_name character varying(255),
  contact_type character varying(255),
  "value" character varying(255),
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
)
WITH (
  OIDS=FALSE
);
**************************

CREATE TABLE
********* QUERY **********
ALTER TABLE ida_contacts OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (2,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',9);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.info','About bank','Info','LOB','',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (4,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(9,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (10,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',0);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (11,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',0);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  INTEGERernal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(255) DEFAULT NULL,
	DESCRIPTION			VARCHAR(1024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(1024) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(1024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(1024) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(255) DEFAULT NULL,
	DESCRIPTION			VARCHAR(1024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(1024) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(1024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(1024) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(255) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(1024) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(1024) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_discounts.sql...';
**************************

            ?column?            
--------------------------------
 Executing hcb_discounts.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS	IDA_HC_DISCOUNT_CATEGORIES;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_DISCOUNT_CATEGORIES (
	CATEGORY_ID		INT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
	CATEGORY_NAME	VARCHAR(255) DEFAULT NULL,
	IMAGE_ID		VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (CATEGORY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
DROP TABLE IF EXISTS	IDA_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_PARTNERS (
	PARTNER_ID		BIGINT NOT NULL,
	TITLE			VARCHAR(255),
	PHONE_NUMBER	VARCHAR(255),
	URL				VARCHAR(255),
	LOGO_URL		VARCHAR(255),
	CATEGROY_ID		INT NOT NULL REFERENCES IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID) 
					ON DELETE CASCADE,
	PRIMARY KEY (PARTENR_ID)
);
**************************

********* QUERY **********
DROP TABLE IF EXISTS	IDA_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_SHOPS (
	SHOP_ID			BIGINT NOT NULL,
	NAME			VARCHAR(255),
	CITY			VARCHAR(255),
	ADDRESS			VARCHAR(2024),
	LATITUDE		DECIMAL(10, 7),
	LONGITUDE		DECIMAL(10, 7),
	DISCOUNT		VARCHAR(512),
	DESCRIPTION		VARCHAR(4000)
	PARTNER_ID		INT NOT NULL REFERENCES IDA_HC_PARTNERS(PARTNER_ID) 
					ON DELETE CASCADE,
	PRIMARY KEY (SHOP_ID)
);
**************************

********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(1024) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_discounts.sql...';
**************************

            ?column?            
--------------------------------
 Executing hcb_discounts.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS	IDA_HC_DISCOUNT_CATEGORIES;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_DISCOUNT_CATEGORIES (
	CATEGORY_ID		INT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
	CATEGORY_NAME	VARCHAR(255) DEFAULT NULL,
	IMAGE_ID		VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (CATEGORY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
DROP TABLE IF EXISTS	IDA_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_PARTNERS (
	PARTNER_ID		BIGINT NOT NULL,
	TITLE			VARCHAR(255),
	PHONE_NUMBER	VARCHAR(255),
	URL				VARCHAR(255),
	LOGO_URL		VARCHAR(255),
	CATEGROY_ID		INT NOT NULL REFERENCES IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID) 
					ON DELETE CASCADE,
	PRIMARY KEY (PARTENR_ID)
);
**************************

********* QUERY **********
DROP TABLE IF EXISTS	IDA_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_SHOPS (
	SHOP_ID			BIGINT NOT NULL,
	NAME			VARCHAR(255),
	CITY			VARCHAR(255),
	ADDRESS			VARCHAR(2024),
	LATITUDE		DECIMAL(10, 7),
	LONGITUDE		DECIMAL(10, 7),
	DISCOUNT		VARCHAR(512),
	DESCRIPTION		VARCHAR(4000),
	PARTNER_ID		INT NOT NULL REFERENCES IDA_HC_PARTNERS(PARTNER_ID) 
					ON DELETE CASCADE,
	PRIMARY KEY (SHOP_ID)
);
**************************

********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(1024) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_discounts.sql...';
**************************

            ?column?            
--------------------------------
 Executing hcb_discounts.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS	IDA_HC_DISCOUNT_CATEGORIES;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_DISCOUNT_CATEGORIES (
	CATEGORY_ID		INT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
	CATEGORY_NAME	VARCHAR(255) DEFAULT NULL,
	IMAGE_ID		VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (CATEGORY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
DROP TABLE IF EXISTS	IDA_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_PARTNERS (
	PARTNER_ID		BIGINT NOT NULL,
	TITLE			VARCHAR(255),
	PHONE_NUMBER	VARCHAR(255),
	URL				VARCHAR(255),
	LOGO_URL		VARCHAR(255),
	CATEGROY_ID		INT NOT NULL REFERENCES IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID) 
					ON DELETE CASCADE,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
DROP TABLE IF EXISTS	IDA_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_SHOPS (
	SHOP_ID			BIGINT NOT NULL,
	NAME			VARCHAR(255),
	CITY			VARCHAR(255),
	ADDRESS			VARCHAR(2024),
	LATITUDE		DECIMAL(10, 7),
	LONGITUDE		DECIMAL(10, 7),
	DISCOUNT		VARCHAR(512),
	DESCRIPTION		VARCHAR(4000),
	PARTNER_ID		INT NOT NULL REFERENCES IDA_HC_PARTNERS(PARTNER_ID) 
					ON DELETE CASCADE,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(1024) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_discounts.sql...';
**************************

            ?column?            
--------------------------------
 Executing hcb_discounts.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS	IDA_HC_DISCOUNT_CATEGORIES;
**************************

********* QUERY **********
CREATE TABLE	IDA_HC_DISCOUNT_CATEGORIES (
	CATEGORY_ID		INT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
	CATEGORY_NAME	VARCHAR(255) DEFAULT NULL,
	IMAGE_ID		VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (CATEGORY_ID)
);
**************************

********* QUERY **********
DROP TABLE IF EXISTS	IDA_HC_PARTNERS;
**************************

********* QUERY **********
CREATE TABLE	IDA_HC_PARTNERS (
	PARTNER_ID		BIGINT NOT NULL,
	TITLE			VARCHAR(255),
	PHONE_NUMBER	VARCHAR(255),
	URL				VARCHAR(255),
	LOGO_URL		VARCHAR(255),
	CATEGROY_ID		INT NOT NULL REFERENCES IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID) 
					ON DELETE CASCADE,
	PRIMARY KEY (PARTNER_ID)
);
**************************

********* QUERY **********
DROP TABLE IF EXISTS	IDA_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_SHOPS (
	SHOP_ID			BIGINT NOT NULL,
	NAME			VARCHAR(255),
	CITY			VARCHAR(255),
	ADDRESS			VARCHAR(2024),
	LATITUDE		DECIMAL(10, 7),
	LONGITUDE		DECIMAL(10, 7),
	DISCOUNT		VARCHAR(512),
	DESCRIPTION		VARCHAR(4000),
	PARTNER_ID		INT NOT NULL REFERENCES IDA_HC_PARTNERS(PARTNER_ID) 
					ON DELETE CASCADE,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_DISCOUNT_CATEGORIES;
**************************

********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_PARTNERS;
**************************

********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(1024) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_discounts.sql...';
**************************

            ?column?            
--------------------------------
 Executing hcb_discounts.sql...
(1 row)

********* QUERY **********
CREATE TABLE	IDA_HC_DISCOUNT_CATEGORIES (
	CATEGORY_ID		INT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
	CATEGORY_NAME	VARCHAR(255) DEFAULT NULL,
	IMAGE_ID		VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (CATEGORY_ID)
);
**************************

********* QUERY **********
CREATE TABLE	IDA_HC_PARTNERS (
	PARTNER_ID		BIGINT NOT NULL,
	TITLE			VARCHAR(255),
	PHONE_NUMBER	VARCHAR(255),
	URL				VARCHAR(255),
	LOGO_URL		VARCHAR(255),
	CATEGROY_ID		INT NOT NULL REFERENCES IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID) 
					ON DELETE CASCADE,
	PRIMARY KEY (PARTNER_ID)
);
**************************

********* QUERY **********
CREATE TABLE	IDA_HC_SHOPS (
	SHOP_ID			BIGINT NOT NULL,
	NAME			VARCHAR(255),
	CITY			VARCHAR(255),
	ADDRESS			VARCHAR(2024),
	LATITUDE		DECIMAL(10, 7),
	LONGITUDE		DECIMAL(10, 7),
	DISCOUNT		VARCHAR(512),
	DESCRIPTION		VARCHAR(4000),
	PARTNER_ID		INT NOT NULL REFERENCES IDA_HC_PARTNERS(PARTNER_ID) 
					ON DELETE CASCADE,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_DISCOUNT_CATEGORIES;
**************************

********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_PARTNERS;
**************************

********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(1024) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_discounts.sql...';
**************************

            ?column?            
--------------------------------
 Executing hcb_discounts.sql...
(1 row)

********* QUERY **********
CREATE TABLE	IDA_HC_DISCOUNT_CATEGORIES (
	CATEGORY_ID		INT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
	CATEGORY_NAME	VARCHAR(255) DEFAULT NULL,
	IMAGE_ID		VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (CATEGORY_ID)
);
**************************

********* QUERY **********
CREATE TABLE	IDA_HC_PARTNERS (
	PARTNER_ID		BIGINT NOT NULL,
	TITLE			VARCHAR(255),
	PHONE_NUMBER	VARCHAR(255),
	URL				VARCHAR(255),
	LOGO_URL		VARCHAR(255),
	CATEGROY_ID		INT NOT NULL REFERENCES IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID) 
					ON DELETE CASCADE,
	PRIMARY KEY (PARTNER_ID)
);
**************************

********* QUERY **********
CREATE TABLE	IDA_HC_SHOPS (
	SHOP_ID			BIGINT NOT NULL,
	NAME			VARCHAR(255),
	CITY			VARCHAR(255),
	ADDRESS			VARCHAR(2024),
	LATITUDE		DECIMAL(10, 7),
	LONGITUDE		DECIMAL(10, 7),
	DISCOUNT		VARCHAR(512),
	DESCRIPTION		VARCHAR(4000),
	PARTNER_ID		INT NOT NULL REFERENCES IDA_HC_PARTNERS(PARTNER_ID) 
					ON DELETE CASCADE,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_DISCOUNT_CATEGORIES;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(1024) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_discounts.sql...';
**************************

            ?column?            
--------------------------------
 Executing hcb_discounts.sql...
(1 row)

********* QUERY **********
CREATE TABLE	IDA_HC_DISCOUNT_CATEGORIES (
	CATEGORY_ID		INT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
	CATEGORY_NAME	VARCHAR(255) DEFAULT NULL,
	IMAGE_ID		VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (CATEGORY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_PARTNERS (
	PARTNER_ID		BIGINT NOT NULL,
	TITLE			VARCHAR(255),
	PHONE_NUMBER	VARCHAR(255),
	URL				VARCHAR(255),
	LOGO_URL		VARCHAR(255),
	CATEGROY_ID		INT NOT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_SHOPS (
	SHOP_ID			BIGINT NOT NULL,
	NAME			VARCHAR(255),
	CITY			VARCHAR(255),
	ADDRESS			VARCHAR(2024),
	LATITUDE		DECIMAL(10, 7),
	LONGITUDE		DECIMAL(10, 7),
	DISCOUNT		VARCHAR(512),
	DESCRIPTION		VARCHAR(4000),
	PARTNER_ID		INT NOT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_DISCOUNT_CATEGORIES;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(1024) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_discounts.sql...';
**************************

            ?column?            
--------------------------------
 Executing hcb_discounts.sql...
(1 row)

********* QUERY **********
CREATE TABLE	IDA_HC_DISCOUNT_CATEGORIES (
	CATEGORY_ID		INT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
	CATEGORY_NAME	VARCHAR(255) DEFAULT NULL,
	IMAGE_ID		VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (CATEGORY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_PARTNERS (
	PARTNER_ID		BIGINT NOT NULL,
	TITLE			VARCHAR(255),
	PHONE_NUMBER	VARCHAR(255),
	URL				VARCHAR(255),
	LOGO_URL		VARCHAR(255),
	CATEGROY_ID		INT NOT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_SHOPS (
	SHOP_ID			BIGINT NOT NULL,
	NAME			VARCHAR(255),
	CITY			VARCHAR(255),
	ADDRESS			VARCHAR(2024),
	LATITUDE		DECIMAL(10, 7),
	LONGITUDE		DECIMAL(10, 7),
	DISCOUNT		VARCHAR(512),
	DESCRIPTION		VARCHAR(4000),
	PARTNER_ID		INT NOT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_DISCOUNT_CATEGORIES;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(1024) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_discounts.sql...';
**************************

            ?column?            
--------------------------------
 Executing hcb_discounts.sql...
(1 row)

********* QUERY **********
CREATE TABLE	IDA_HC_DISCOUNT_CATEGORIES (
	CATEGORY_ID		INT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
	CATEGORY_NAME	VARCHAR(255) DEFAULT NULL,
	IMAGE_ID		VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (CATEGORY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_PARTNERS (
	PARTNER_ID		BIGINT NOT NULL,
	TITLE			VARCHAR(255),
	PHONE_NUMBER	VARCHAR(255),
	URL				VARCHAR(255),
	LOGO_URL		VARCHAR(255),
	CATEGROY_ID		INT NOT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_SHOPS (
	SHOP_ID			BIGINT NOT NULL,
	NAME			VARCHAR(255),
	CITY			VARCHAR(255),
	ADDRESS			VARCHAR(2024),
	LATITUDE		DECIMAL(10, 7),
	LONGITUDE		DECIMAL(10, 7),
	DISCOUNT		VARCHAR(512),
	DESCRIPTION		VARCHAR(4000),
	PARTNER_ID		INT NOT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_insert_discount_categories.sql...';
**************************

                    ?column?                     
-------------------------------------------------
 Executing hcb_insert_discount_categories.sql...
(1 row)

********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (1, 'Мебель и товары для дома', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (2, 'Страхование', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (3, 'Бытовая техника и электроника', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (4, 'Товары для детей', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (5, 'Мобильные телефоны', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (6, 'Ювелирные украшения', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (7, 'Другое', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (8, 'Подарки', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (9, 'Аптеки', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (10, 'Строительные материалы', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (11, 'Продукты питания', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (12, 'Спорт', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (13, 'Образование', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (14, 'Парфюмерия и косметика', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (15, 'Красота и здоровье', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (16, 'Одежда, обувь, аксессуары', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (17, 'Рестораны и кафе', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (18, 'Профессиональные услуги', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (19, 'Покупки через Интернет', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (20, 'Выгодный маршрут', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (21, 'Туризм и отдых', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (22, 'Автомобили и Мотоциклы', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (13, 'АЗС', NULL);
**************************

********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_DISCOUNT_CATEGORIES;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(1024) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_discounts.sql...';
**************************

            ?column?            
--------------------------------
 Executing hcb_discounts.sql...
(1 row)

********* QUERY **********
CREATE TABLE	IDA_HC_DISCOUNT_CATEGORIES (
	CATEGORY_ID		INT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
	CATEGORY_NAME	VARCHAR(255) DEFAULT NULL,
	IMAGE_ID		VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (CATEGORY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_PARTNERS (
	PARTNER_ID		BIGINT NOT NULL,
	TITLE			VARCHAR(255),
	PHONE_NUMBER	VARCHAR(255),
	URL				VARCHAR(255),
	LOGO_URL		VARCHAR(255),
	CATEGROY_ID		INT NOT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_SHOPS (
	SHOP_ID			BIGINT NOT NULL,
	NAME			VARCHAR(255),
	CITY			VARCHAR(255),
	ADDRESS			VARCHAR(2024),
	LATITUDE		DECIMAL(10, 7),
	LONGITUDE		DECIMAL(10, 7),
	DISCOUNT		VARCHAR(512),
	DESCRIPTION		VARCHAR(4000),
	PARTNER_ID		INT NOT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_insert_discount_categories.sql...';
**************************

                    ?column?                     
-------------------------------------------------
 Executing hcb_insert_discount_categories.sql...
(1 row)

********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (1, 'Мебель и товары для дома', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (2, 'Страхование', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (3, 'Бытовая техника и электроника', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (4, 'Товары для детей', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (5, 'Мобильные телефоны', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (6, 'Ювелирные украшения', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (7, 'Другое', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (8, 'Подарки', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (9, 'Аптеки', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (10, 'Строительные материалы', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (11, 'Продукты питания', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (12, 'Спорт', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (13, 'Образование', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (14, 'Парфюмерия и косметика', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (15, 'Красота и здоровье', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (16, 'Одежда, обувь, аксессуары', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (17, 'Рестораны и кафе', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (18, 'Профессиональные услуги', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (19, 'Покупки через Интернет', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (20, 'Выгодный маршрут', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (21, 'Туризм и отдых', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (22, 'Автомобили и Мотоциклы', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (23, 'АЗС', NULL);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

********* QUERY **********
SELECT 'Executing delete_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing delete_schema.sql...
(1 row)

********* QUERY **********
DROP TABLE IF EXISTS ida_banners;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_contacts;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_images;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_integration_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_last_updates;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_properties;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_users;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_job_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_email_conf;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_product_types;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_statuses;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_offices;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS idb_hc_atms;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_beneficiaries;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS ida_hc_payment_categories;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDB_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_SHOPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_PARTNERS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE IF EXISTS IDA_HC_DISCOUNT_CATEGORIES;
**************************

DROP TABLE
********* QUERY **********
DROP SEQUENCE IF EXISTS hibernate_sequence;
**************************

DROP SEQUENCE
********* QUERY **********
SELECT 'Executing quartz/tables_mysql.sql...';
**************************

               ?column?               
--------------------------------------
 Executing quartz/tables_mysql.sql...
(1 row)

********* QUERY **********
drop table qrtz_fired_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_PAUSED_TRIGGER_GRPS;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_SCHEDULER_STATE;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_LOCKS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simple_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_cron_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_simprop_triggers;
**************************

DROP TABLE
********* QUERY **********
DROP TABLE QRTZ_BLOB_TRIGGERS;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_triggers;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_job_details;
**************************

DROP TABLE
********* QUERY **********
drop table qrtz_calendars;
**************************

DROP TABLE
********* QUERY **********
CREATE TABLE qrtz_job_details
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL,
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    JOB_CLASS_NAME   VARCHAR(250) NOT NULL, 
    IS_DURABLE BOOL NOT NULL,
    IS_NONCONCURRENT BOOL NOT NULL,
    IS_UPDATE_DATA BOOL NOT NULL,
    REQUESTS_RECOVERY BOOL NOT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    JOB_NAME  VARCHAR(200) NOT NULL, 
    JOB_GROUP VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(250) NULL,
    NEXT_FIRE_TIME BIGINT NULL,
    PREV_FIRE_TIME BIGINT NULL,
    PRIORITY INTEGER NULL,
    TRIGGER_STATE VARCHAR(16) NOT NULL,
    TRIGGER_TYPE VARCHAR(8) NOT NULL,
    START_TIME BIGINT NOT NULL,
    END_TIME BIGINT NULL,
    CALENDAR_NAME VARCHAR(200) NULL,
    MISFIRE_INSTR SMALLINT NULL,
    JOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simple_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    REPEAT_COUNT BIGINT NOT NULL,
    REPEAT_INTERVAL BIGINT NOT NULL,
    TIMES_TRIGGERED BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_cron_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    CRON_EXPRESSION VARCHAR(120) NOT NULL,
    TIME_ZONE_ID VARCHAR(80),
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_simprop_triggers
  (          
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    STR_PROP_1 VARCHAR(512) NULL,
    STR_PROP_2 VARCHAR(512) NULL,
    STR_PROP_3 VARCHAR(512) NULL,
    INT_PROP_1 INT NULL,
    INT_PROP_2 INT NULL,
    LONG_PROP_1 BIGINT NULL,
    LONG_PROP_2 BIGINT NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 BOOL NULL,
    BOOL_PROP_2 BOOL NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
    REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_blob_triggers
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    BLOB_DATA BYTEA NULL,
    PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_calendars
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    CALENDAR_NAME  VARCHAR(200) NOT NULL, 
    CALENDAR BYTEA NOT NULL,
    PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_paused_trigger_grps
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR(200) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_fired_triggers 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    ENTRY_ID VARCHAR(95) NOT NULL,
    TRIGGER_NAME VARCHAR(200) NOT NULL,
    TRIGGER_GROUP VARCHAR(200) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    FIRED_TIME BIGINT NOT NULL,
    PRIORITY INTEGER NOT NULL,
    STATE VARCHAR(16) NOT NULL,
    JOB_NAME VARCHAR(200) NULL,
    JOB_GROUP VARCHAR(200) NULL,
    IS_NONCONCURRENT BOOL NULL,
    REQUESTS_RECOVERY BOOL NULL,
    PRIMARY KEY (SCHED_NAME,ENTRY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_scheduler_state 
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    INSTANCE_NAME VARCHAR(200) NOT NULL,
    LAST_CHECKIN_TIME BIGINT NOT NULL,
    CHECKIN_INTERVAL BIGINT NOT NULL,
    PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE qrtz_locks
  (
    SCHED_NAME VARCHAR(120) NOT NULL,
    LOCK_NAME  VARCHAR(40) NOT NULL, 
    PRIMARY KEY (SCHED_NAME,LOCK_NAME)
);
**************************

CREATE TABLE
********* QUERY **********
create index idx_qrtz_j_req_recovery on qrtz_job_details(SCHED_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_j_grp on qrtz_job_details(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_j on qrtz_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_jg on qrtz_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_c on qrtz_triggers(SCHED_NAME,CALENDAR_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_g on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_state on qrtz_triggers(SCHED_NAME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_state on qrtz_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_n_g_state on qrtz_triggers(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_next_fire_time on qrtz_triggers(SCHED_NAME,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st on qrtz_triggers(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_t_nft_st_misfire_grp on qrtz_triggers(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_trig_inst_name on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_inst_job_req_rcvry on qrtz_fired_triggers(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_j_g on qrtz_fired_triggers(SCHED_NAME,JOB_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_jg on qrtz_fired_triggers(SCHED_NAME,JOB_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_t_g on qrtz_fired_triggers(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
create index idx_qrtz_ft_tg on qrtz_fired_triggers(SCHED_NAME,TRIGGER_GROUP);
**************************

CREATE INDEX
********* QUERY **********
commit;
**************************

COMMIT
********* QUERY **********
SELECT 'Executing create_schema.sql...';
**************************

            ?column?            
--------------------------------
 Executing create_schema.sql...
(1 row)

********* QUERY **********
CREATE SEQUENCE hibernate_sequence
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 4
  CACHE 1;
**************************

CREATE SEQUENCE
********* QUERY **********
ALTER TABLE hibernate_sequence OWNER TO hc_mobile;
**************************

ALTER TABLE
********* QUERY **********
CREATE TABLE ida_banners (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  order_number 		BIGINT DEFAULT NULL,
  image_id			varchar(255) DEFAULT NULL,
  text				varchar(255) DEFAULT NULL,
  title				varchar(255) DEFAULT NULL,
  url				varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_contacts (
  id 				BIGINT NOT NULL,
  order_number		BIGINT,
  contact_id		varchar(255) DEFAULT NULL,
  large_value		varchar(1024),
  contact_name		varchar(255) DEFAULT NULL,
  contact_type		varchar(255) DEFAULT NULL,
  "value"			varchar(255) DEFAULT NULL,
  CONSTRAINT ida_contacts_pkey PRIMARY KEY (id),
  CONSTRAINT ida_contacts_contact_id_key UNIQUE (contact_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_beneficiaries (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  beneficiary_id 	varchar(255) DEFAULT NULL,
  image_id 			varchar(255) DEFAULT NULL,
  region 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_payment_categories (
  id 		BIGINT NOT NULL ,
  category	varchar(255) DEFAULT NULL,
  image_id	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (category)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_product_types (
  id 				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image_id 			varchar(255) DEFAULT NULL,
  internal_name varchar(255) DEFAULT NULL,
  visible_name_en 	varchar(255) DEFAULT NULL,
  visible_name_ru 	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_hc_statuses (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  product_kind		SMALLINT DEFAULT NULL,
  status_key		varchar(255) DEFAULT NULL,
  status_value_en	varchar(255) DEFAULT NULL,
  status_value_ru	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (product_kind,status_key)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_images (
  id 			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  image 		varchar(255) DEFAULT NULL,
  image_id		varchar(255) DEFAULT NULL,
  platform		varchar(255) DEFAULT NULL,
  resolution	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (image_id,platform,resolution)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_integration_properties (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  field_name		varchar(255) DEFAULT NULL,
  integration_id 	varchar(255) DEFAULT NULL,
  value 			varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (integration_id, field_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_last_updates (
  id				BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  entity_name		varchar(255) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (entity_name)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_properties (
  id			BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  name			varchar(255) DEFAULT NULL,
  value 		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_users (
  id 		BIGINT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
  password	varchar(255) DEFAULT NULL,
  username	varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_job_statuses (
  job_id			varchar(255) NOT NULL,
  status			varchar(64) DEFAULT NULL,
  last_update_time	BIGINT DEFAULT NULL,
  PRIMARY KEY (job_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_offices (
  office_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  PRIMARY KEY (office_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		ida_atms (
  atm_id			SMALLINT NOT NULL,
  order_num			INTEGER NOT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  PRIMARY KEY (atm_id)
) ;
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE ida_email_conf (
  id 			INTEGER NOT NULL ,
  email_type	SMALLINT DEFAULT NULL,
  recipients	varchar(255) DEFAULT NULL,
  subject		varchar(255) DEFAULT NULL,
  xslt_path		varchar(255) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE (email_type)
) ;
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing create_integration_schema.sql...';
**************************

                  ?column?                  
--------------------------------------------
 Executing create_integration_schema.sql...
(1 row)

********* QUERY **********
CREATE TABLE		idb_hc_offices (
  office_id			SMALLINT NOT NULL,
  order_num			SMALLINT NOT NULL,
  zip_code			varchar(255) DEFAULT NULL,
  city				varchar(255) DEFAULT NULL,
  subway_station	varchar(255) DEFAULT NULL,
  name				varchar(255) DEFAULT NULL,
  office_type		varchar(16) DEFAULT NULL,
  address			varchar(255) DEFAULT NULL,
  operation_time	varchar(255) DEFAULT NULL,
  latitude			decimal(10, 7) DEFAULT NULL,
  longitude			decimal(10, 7) DEFAULT NULL,
  phone				varchar(255) DEFAULT NULL,
  manager			varchar(255) DEFAULT NULL,
  affiliate			varchar(255) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_us_dollars	VARCHAR(3) DEFAULT 'no',
  has_western_union	VARCHAR(3) DEFAULT 'no',
  has_deposits		VARCHAR(3) DEFAULT 'no',
  has_atm			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (office_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE		idb_hc_atms (
  atm_id				SMALLINT NOT NULL,
  order_num				SMALLINT NOT NULL,
  city					varchar(255) DEFAULT NULL,
  subway_station		varchar(255) DEFAULT NULL,
  address				varchar(255) DEFAULT NULL,
  operation_time		varchar(255) DEFAULT NULL,
  latitude				decimal(10, 7) DEFAULT NULL,
  longitude				decimal(10, 7) DEFAULT NULL,
  driving_directions	text DEFAULT NULL,
  has_rur				VARCHAR(3) DEFAULT 'no',
  has_usd				VARCHAR(3) DEFAULT 'no',
  has_eur				VARCHAR(3) DEFAULT 'no',
  supports_mobile		VARCHAR(3) DEFAULT 'no',
  supports_balance		VARCHAR(3) DEFAULT 'no',
  supports_internet		VARCHAR(3) DEFAULT 'no',
  supports_utilities	VARCHAR(3) DEFAULT 'no',
  accepts_cash			VARCHAR(3) DEFAULT 'no',
  PRIMARY KEY (atm_id)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_PARTNERS (
	PARTNER_ID			SMALLINT NOT NULL,
	TITLE				VARCHAR(255) DEFAULT NULL,
	SUBTITLE			VARCHAR(512) DEFAULT NULL,
	DISCOUNT			VARCHAR(1024) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	URL					VARCHAR(255) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	DISCOUNT1			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION1		VARCHAR(4000) DEFAULT NULL,
	IS_ENTERPRISE		VARCHAR(3) DEFAULT 'no',
	MANAGER_NAME		VARCHAR(255) DEFAULT NULL,
	MGR_POSITION		VARCHAR(255) DEFAULT NULL,
	MGR_PHONE			VARCHAR(255) DEFAULT NULL,
	MGR_EMAIL			VARCHAR(255) DEFAULT NULL,
	LOGO_URL			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDB_HC_SHOPS (
	SHOP_ID				SMALLINT NOT NULL,
	CITY				VARCHAR(255) DEFAULT NULL,
	NAME				VARCHAR(255) DEFAULT NULL,
	LOCATION			VARCHAR(255) DEFAULT NULL,
	ADDRESS				VARCHAR(2024) DEFAULT NULL,
	PHONE_NUMBER		VARCHAR(255) DEFAULT NULL,
	DISCOUNT			VARCHAR(512) DEFAULT NULL,
	DESCRIPTION			VARCHAR(4000) DEFAULT NULL,
	CATEGORY			VARCHAR(255) DEFAULT NULL,
	PARTNER_ID			SMALLINT NOT NULL,
	PARTNER_NAME		VARCHAR(255) DEFAULT NULL,
	MERCH_NAME			VARCHAR(255) DEFAULT NULL,
	MERCH_ID			VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_discounts.sql...';
**************************

            ?column?            
--------------------------------
 Executing hcb_discounts.sql...
(1 row)

********* QUERY **********
CREATE TABLE	IDA_HC_DISCOUNT_CATEGORIES (
	CATEGORY_ID		INT NOT NULL DEFAULT NEXTVAL('hibernate_sequence'),
	CATEGORY_NAME	VARCHAR(255) DEFAULT NULL,
	IMAGE_ID		VARCHAR(255) DEFAULT NULL,
	PRIMARY KEY (CATEGORY_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_PARTNERS (
	PARTNER_ID		BIGINT NOT NULL,
	TITLE			VARCHAR(255),
	PHONE_NUMBER	VARCHAR(255),
	URL				VARCHAR(255),
	LOGO_URL		VARCHAR(255),
	CATEGORY_ID		INT NOT NULL,
	PRIMARY KEY (PARTNER_ID)
);
**************************

CREATE TABLE
********* QUERY **********
CREATE TABLE	IDA_HC_SHOPS (
	SHOP_ID			BIGINT NOT NULL,
	NAME			VARCHAR(255),
	CITY			VARCHAR(255),
	ADDRESS			VARCHAR(2024),
	LATITUDE		DECIMAL(10, 7),
	LONGITUDE		DECIMAL(10, 7),
	DISCOUNT		VARCHAR(512),
	DESCRIPTION		VARCHAR(4000),
	PARTNER_ID		INT NOT NULL,
	PRIMARY KEY (SHOP_ID)
);
**************************

CREATE TABLE
********* QUERY **********
SELECT 'Executing hcb_insert_discount_categories.sql...';
**************************

                    ?column?                     
-------------------------------------------------
 Executing hcb_insert_discount_categories.sql...
(1 row)

********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (1, 'Мебель и товары для дома', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (2, 'Страхование', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (3, 'Бытовая техника и электроника', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (4, 'Товары для детей', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (5, 'Мобильные телефоны', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (6, 'Ювелирные украшения', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (7, 'Другое', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (8, 'Подарки', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (9, 'Аптеки', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (10, 'Строительные материалы', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (11, 'Продукты питания', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (12, 'Спорт', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (13, 'Образование', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (14, 'Парфюмерия и косметика', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (15, 'Красота и здоровье', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (16, 'Одежда, обувь, аксессуары', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (17, 'Рестораны и кафе', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (18, 'Профессиональные услуги', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (19, 'Покупки через Интернет', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (20, 'Выгодный маршрут', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (21, 'Туризм и отдых', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (22, 'Автомобили и Мотоциклы', NULL);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO IDA_HC_DISCOUNT_CATEGORIES(CATEGORY_ID, CATEGORY_NAME, IMAGE_ID) 
 VALUES (23, 'АЗС', NULL);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_contacts.sql...';
**************************

             ?column?             
----------------------------------
 Executing insert_contacts.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number) 
VALUES (1,'ida.phone.number','','contacts.phone.number','PHONE','8(495)785-82-22',7);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (2,'ida.info','About bank','Info','LOB','',6);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (3,'ida.fb.url','','contacts.facebook.url','URL','http://ru-ru.facebook.com/homecredit.ru',5);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES(4,'ida.rss.url','','RSS Feed URL','URL','hc/rss112',4);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (5,'ida.vk.url','','contacts.vkontakte.url','URL','http://vkontakte.ru/homecredit',3);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (6,'ida.odnoklassniki.url','','contacts.odnoklassniki.url','URL','http://www.odnoklassniki.ru/#/group/48243068109029',2);
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_contacts (id, contact_id, large_value, contact_name, contact_type, value, order_number)
VALUES (7,'ida.tw.url','','contacts.twitter.url','URL','http://twitter.com/#!/HOMECREDIT_BANK',1);
**************************

INSERT 0 1
********* QUERY **********
SELECT 'Executing insert_hc_statuses.sql...';
**************************

              ?column?               
-------------------------------------
 Executing insert_hc_statuses.sql...
(1 row)

********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (1, '1', 'неактивная', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (2, '1', 'Активная', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (3, '1', 'заблокирована', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (4, '1', 'Утеряна', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (5, '1', 'Украдена', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (6, '1', 'аннулирована', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (7, '1', 'выдана запасная карта', 'Inactive', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (8, '1', 'обновлена', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (9, '2', 'Действующий', 'Active', 'Действующий');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (10, '2', 'Подписанный', 'Signed', 'Подписанный');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (11, '3', '0', 'Locked', 'Заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (12, '3', '1', 'Active', 'Активная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (13, '3', '8', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (14, '3', '9', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (15, '3', 'C', 'Inactive', 'Неактивная');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (16, '3', '4', 'Locked by collection agency', 'Заблокирована службой взыскания');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (17, '3', 'F', 'Revoked', 'Аннулирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (18, '3', 'A', 'Temporarily locked', 'Временно заблокирована');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (19, '4', '0', 'Opened', 'Открыт');
**************************

INSERT 0 1
********* QUERY **********
INSERT INTO ida_hc_statuses (id, product_kind, status_key, status_value_en, status_value_ru)
VALUES (20, '4', '1', 'Closed', 'Закрыт');
**************************

INSERT 0 1
********* QUERY **********
SELECT 'ALL.SQL completed!';
**************************

      ?column?      
--------------------
 ALL.SQL completed!
(1 row)

